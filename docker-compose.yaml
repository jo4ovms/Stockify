services:
  zookeeper:
    image: "bitnami/zookeeper:latest"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"
    networks:
      - stockifynetwork

  kafka:
    image: "bitnami/kafka:latest"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://host.docker.internal:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    networks:
      - stockifynetwork

  postgres:
    image: postgres:latest
    container_name: postgres-db
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: stockify
    ports:
      - "5432:5432"
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    networks:
      - stockifynetwork

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8080:80"
    depends_on:
      - postgres
    networks:
      - stockifynetwork

  stockify-api:
    build:
      dockerfile: Dockerfile
      context: ./API
    container_name: stockifyapi
    restart: on-failure
    environment:
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/postgres
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: stockify
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
    ports:
      - "8081:8081"
    depends_on:
      - kafka
      - postgres
    networks:
      - stockifynetwork

  stockify-frontend:
    build:
      dockerfile: Dockerfile
      context: ./FRONT
    container_name: stockify-frontend
    restart: on-failure
    ports:
      - "4173:4173"
    networks:
      - stockifynetwork
    expose:
      - 4173

volumes:
  postgres-data:

networks:
  stockifynetwork:
    driver: bridge
